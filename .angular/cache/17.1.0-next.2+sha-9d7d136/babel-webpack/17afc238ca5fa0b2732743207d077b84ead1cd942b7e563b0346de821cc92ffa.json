{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport { GlobalConstants } from 'src/app/shared/global-constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/user.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"ngx-ui-loader\";\nimport * as i5 from \"src/app/services/snackbar.service\";\nexport let ChangePasswordComponent = /*#__PURE__*/(() => {\n  class ChangePasswordComponent {\n    constructor(formBuilder, userService, dialogRef, ngxService, snackbarService) {\n      this.formBuilder = formBuilder;\n      this.userService = userService;\n      this.dialogRef = dialogRef;\n      this.ngxService = ngxService;\n      this.snackbarService = snackbarService;\n      this.oldPassword = true;\n      this.newPassword = true;\n      this.confirmPassword = true;\n      this.changePasswordForm = FormGroup;\n    }\n    ngOnInit() {\n      this.changePasswordForm = this.formBuilder.group({\n        oldPassword: [null, Validators.required],\n        newPassword: [null, Validators.required],\n        confirmPassword: [null, Validators.required]\n      });\n    }\n    validateSubmit() {\n      if (this.changePasswordForm.controls['newPassword'].value != this.changePasswordForm.controls['confirmPassword'].value) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    handlepasswordChangeSubmit() {\n      this.ngxService.start();\n      var formData = this.changePasswordForm.value;\n      var data = {\n        oldPassword: formData.oldPassword,\n        newPassword: formData.newPassword,\n        confirmPassword: formData.confirmPassword\n      };\n      this.userService.changePassword(data).subscribe({\n        next: response => {\n          this.ngxService.stop();\n          this.responeMessage = response?.message;\n          this.dialogRef.close();\n          this.snackbarService.openSnackBar(this.responeMessage, \"success\");\n        },\n        error: error => {\n          console.log(\"Loi o day\" + error);\n          this.ngxService.stop();\n          if (error.error?.message) {\n            this.responeMessage = error.error?.message;\n          } else {\n            this.responeMessage = GlobalConstants.genericError;\n          }\n          this.snackbarService.openSnackBar(this.responeMess);\n        }\n      });\n    }\n    static #_ = this.ɵfac = function ChangePasswordComponent_Factory(t) {\n      return new (t || ChangePasswordComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.MatDialogRef), i0.ɵɵdirectiveInject(i4.NgxUiLoaderService), i0.ɵɵdirectiveInject(i5.SnackbarService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ChangePasswordComponent,\n      selectors: [[\"app-change-password\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 2,\n      vars: 0,\n      template: function ChangePasswordComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p\");\n          i0.ɵɵtext(1, \"change-password works!\");\n          i0.ɵɵelementEnd();\n        }\n      }\n    });\n  }\n  return ChangePasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}